<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.GnaixEuy.vlog.dao.VlogMapper">
    <resultMap id="BaseResultMap" type="cn.GnaixEuy.model.pojo.Vlog">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="vloger_id" property="vlogerId" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="cover" property="cover" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="width" property="width" jdbcType="INTEGER"/>
        <result column="height" property="height" jdbcType="INTEGER"/>
        <result column="like_counts" property="likeCounts" jdbcType="INTEGER"/>
        <result column="comments_counts" property="commentsCounts" jdbcType="INTEGER"/>
        <result column="is_private" property="isPrivate" jdbcType="INTEGER"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getIndexVlogList" parameterType="map" resultType="cn.GnaixEuy.model.vo.IndexVlogVO">
        SELECT
        v.id as vlogId,
        v.vloger_id as vlogerId,
        u.face as vlogerFace,
        u.nickname as vlogerName,
        v.title as content,
        v.url as url,
        v.cover as cover,
        v.width as width,
        v.height as height,
        v.like_counts as likeCounts,
        v.comments_counts as commentsCounts,
        v.is_private as isPrivate
        FROM
        vlog v
        LEFT JOIN
        users u
        ON
        v.vloger_id = u.id
        WHERE
        v.is_private = 0
        <if test="paramMap.search != null and paramMap.search != ''">
            AND v.title like '%${paramMap.search}%'
        </if>
        ORDER BY
        v.created_time
        DESC
    </select>

    <select id="getVlogDetailById" parameterType="map" resultType="cn.GnaixEuy.model.vo.IndexVlogVO">
        SELECT v.id              as vlogId,
               v.vloger_id       as vlogerId,
               u.face            as vlogerFace,
               u.nickname        as vlogerName,
               v.title           as content,
               v.url             as url,
               v.cover           as cover,
               v.width           as width,
               v.height          as height,
               v.like_counts     as likeCounts,
               v.comments_counts as commentsCounts,
               v.is_private      as isPrivate
        FROM vlog v
                 LEFT JOIN
             users u
             ON
                 v.vloger_id = u.id
        WHERE v.id = #{paramMap.vlogId}
    </select>

    <select id="getMyLikedVlogList" parameterType="map" resultType="cn.GnaixEuy.model.vo.IndexVlogVO">
        SELECT v.id              as vlogId,
               v.vloger_id       as vlogerId,
               -- u.face as vlogerFace,
               -- u.nickname as vlogerName,
               v.title           as content,
               v.url             as url,
               v.cover           as cover,
               v.width           as width,
               v.height          as height,
               v.like_counts     as likeCounts,
               v.comments_counts as commentsCounts,
               v.is_private      as isPrivate
        FROM vlog v
                 LEFT JOIN
             my_liked_vlog mlv
             ON
                 v.id = mlv.vlog_id
                 LEFT JOIN
             users u
             ON
                 mlv.user_id = u.id
        WHERE u.id = #{paramMap.userId}
          AND v.is_private = 0
        ORDER BY v.created_time
                DESC
    </select>

    <select id="getMyFollowVlogList" parameterType="map" resultType="cn.GnaixEuy.model.vo.IndexVlogVO">
        SELECT v.id              as vlogId,
               v.vloger_id       as vlogerId,
               u.face            as vlogerFace,
               u.nickname        as vlogerName,
               v.title           as content,
               v.url             as url,
               v.cover           as cover,
               v.width           as width,
               v.height          as height,
               v.like_counts     as likeCounts,
               v.comments_counts as commentsCounts,
               v.is_private      as isPrivate
        FROM vlog v
                 LEFT JOIN
             fans f
             ON
                 v.vloger_id = f.vloger_id
                 LEFT JOIN
             users u
             ON
                 f.vloger_id = u.id
        WHERE v.is_private = 0
          AND f.fan_id = #{paramMap.myId}
        ORDER BY v.created_time
                DESC
    </select>

    <select id="getMyFriendVlogList" parameterType="map" resultType="cn.GnaixEuy.model.vo.IndexVlogVO">
        SELECT v.id              as vlogId,
               v.vloger_id       as vlogerId,
               u.face            as vlogerFace,
               u.nickname        as vlogerName,
               v.title           as content,
               v.url             as url,
               v.cover           as cover,
               v.width           as width,
               v.height          as height,
               v.like_counts     as likeCounts,
               v.comments_counts as commentsCounts,
               v.is_private      as isPrivate
        FROM vlog v
                 LEFT JOIN
             fans f
             ON
                 v.vloger_id = f.fan_id
                 LEFT JOIN
             users u
             ON
                 f.fan_id = u.id
        WHERE v.is_private = 0
          AND f.vloger_id = #{paramMap.myId}
          AND f.is_fan_friend_of_mine = 1
        ORDER BY v.created_time
                DESC
    </select>
</mapper>